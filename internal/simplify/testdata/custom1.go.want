package demo

import (
	"fmt"
	"errors"
	"io"
)

func do() {
	var id int
	id++
	id++
	id--
	id += 12

	var num int64
	num++
	num++
	num += 2
	num--
	fmt.Println("ok", "a", num)

	var b bool
	if b { // if b==true{
		fmt.Println("1")
	}

	b1 := b || num > 2
	b2 := b
	b3 := b || num > 2

	if !b { //  if b!=true{
		fmt.Println("2", b1, b2, b3)
	}

	if !b { //  if b==false{
		fmt.Println("3")
	}

	if b { // if b!=false{
		fmt.Println("4")
	}

	if b {
		fmt.Println("5")
	}

	if !b {
		fmt.Println("6")
	}

	var s string
	if s == "true" {
		fmt.Println(s)
	}

	for b {
		fmt.Println("5")
	}

	for !b {
		fmt.Println("5")
	}
	for i := 0; !b && i < 10; i++ {
		fmt.Println("5", i)
	}

	fmt.Println("6", isEmpty(b))
	fmt.Println("7", !isEmpty(b))
	fmt.Println("8", !isEmpty(b))
	fmt.Println("9", isEmpty(s))

	err1 := errors.New("fail")
	_ = errors.Is(err1, io.EOF)
	_ = !errors.Is(err1, io.EOF)
}

func isEmpty(val any) bool {
	if val == nil {
		return true
	} else if val == false {
		return true
	}
	return false
}
