package demo

import (
	"fmt"
	"errors"
	"io"
)

func do() {
	var id int
	id += 1
	id++
	id -= 1
	id += 12

	var num int64
	num += 1
	num++
	num += 2
	num -= 1
	fmt.Println("ok", "a", num)

	var b bool
	if b == true { // if b==true{
		fmt.Println("1")
	}

	b1 := b == true || num > 2
	b2 := b
	b3 := b || num > 2

	if b != true { //  if b!=true{
		fmt.Println("2",b1,b2,b3)
	}

	if b == false { //  if b==false{
		fmt.Println("3")
	}

	if b != false { // if b!=false{
		fmt.Println("4")
	}

	if b {
		fmt.Println("5")
	}

	if !b {
		fmt.Println("6")
	}

	var s string
	if s == "true" {
		fmt.Println(s)
	}

	for b == true {
		fmt.Println("5")
	}

	for b == false {
		fmt.Println("5")
	}
	for i := 0; b == false && i < 10; i++ {
		fmt.Println("5", i)
	}

	fmt.Println("6", isEmpty(b) == true)
	fmt.Println("7", isEmpty(b) == false)
	fmt.Println("8", false == isEmpty(b))
	fmt.Println("9", isEmpty(s))

	err1 := errors.New("fail")
	_ = errors.Is(err1, io.EOF) == true
	_ = errors.Is(err1, io.EOF) == false
}

func isEmpty(val any)bool{
   if val==nil{
       return true
   }else if val==false{
       return true
   }
   return false
}